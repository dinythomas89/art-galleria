{"version":3,"file":"static/js/24.4bc86375.chunk.js","mappings":"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","sources":["styles/backButton.ts","components/BackButton.tsx","styles/imageCard.ts","components/ImageCard.tsx","styles/pagination.ts","components/Pagination.tsx","store/paginationStore.ts","styles/favourites.ts","pages/Favourites.tsx","store/likeButtonStore.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const BackButtonComponent = styled.div`\n  margin: 20px;\n  max-width: max-content;\n  font-size: 26px;\n  color: #6b6b6c;\n  cursor: pointer;\n\n  &:hover {\n    color: black;\n  }\n`;\n","import { useNavigate } from \"react-router-dom\";\nimport { BackButtonComponent } from \"../styles/backButton\";\n\nconst BackButton = () => {\n  let navigate = useNavigate();\n  return (\n    <BackButtonComponent onClick={() => navigate(-1)}>â¬…</BackButtonComponent>\n  );\n};\n\nexport default BackButton;\n","import styled from \"styled-components\";\n\nexport const ImageCardContainer = styled.div`\n  height: max-content;\n  padding: 10px;\n  margin: 10px;\n  border-radius: 10px;\n  -webkit-box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px,\n    rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px,\n    rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const CardImage = styled.img`\n  min-width: 250px;\n  max-width: 330px;\n  height: 300px;\n  border-radius: 10px;\n  animation: blur 4s 1;\n\n  @keyframes blur {\n    from {\n      filter: blur(3px);\n      opacity: 0;\n    }\n    to {\n      filter: blur(0px);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const CardText = styled.p`\n  font-size: 1.2em;\n`;\n\nexport const LikeButton = styled.button<{ isSelected: boolean }>`\n  font-size: 28px;\n  padding: 10px 0;\n  background: white;\n  border: none;\n  cursor: pointer;\n  color: ${(props) => (props.isSelected ? \"#213e5c\" : \"#aaaaad\")};\n\n  &:hover {\n    font-size: 41px;\n    padding: 0;\n    animation: wiggle 2s linear infinite;\n\n    @keyframes wiggle {\n      0%,\n      7% {\n        transform: rotateZ(0);\n      }\n      15% {\n        transform: rotateZ(-15deg);\n      }\n      20% {\n        transform: rotateZ(10deg);\n      }\n      25% {\n        transform: rotateZ(-10deg);\n      }\n      30% {\n        transform: rotateZ(6deg);\n      }\n      35% {\n        transform: rotateZ(-4deg);\n      }\n      40%,\n      100% {\n        transform: rotateZ(0);\n      }\n    }\n  }\n`;\n","import { useLikeButtonStore } from \"../store/likeButtonStore\";\nimport {\n  CardImage,\n  CardText,\n  ImageCardContainer,\n  LikeButton,\n} from \"../styles/imageCard\";\n\ninterface Image {\n  id: number;\n  workImage: string;\n  workLink: string;\n}\ninterface ImageProps {\n  image: Image;\n}\n\nconst ImageCard = ({ image }: ImageProps) => {\n  const [likedCardIds, toggleLike] = useLikeButtonStore((state) => [\n    state.likedCardIds,\n    state.toggleLike,\n  ]);\n  const isSelected = likedCardIds.includes(image.id);\n\n  return (\n    <ImageCardContainer>\n      <CardImage src={image.workLink} alt={image.workImage} loading=\"lazy\" />\n      <CardText>{image.workImage}</CardText>\n      <LikeButton\n        onClick={() => {\n          toggleLike(image.id);\n        }}\n        isSelected={isSelected}\n      >\n        &#9829;\n      </LikeButton>\n    </ImageCardContainer>\n  );\n};\n\nexport default ImageCard;\n","import styled from \"styled-components\";\n\nexport const PaginationContainer = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4% 0;\n  gap: 6px;\n  }`;\n\nexport const PaginationList = styled.li<{ primary: string }>`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => (props.primary === \"active\" ? \"#FFFFFF\" : \"#213e5c\")};\n  background: ${(props) =>\n    props.primary === \"active\" ? \"#213e5c\" : \"#FFFFFF\"};\n  padding: 8px 15px;\n  border: 1px solid #213e5c;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: 0.2s all ease-in-out;\n  list-style-type: none;\n\n  &:hover {\n    color: #ffffff;\n    background: #5e7d9b;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    padding: 8px 10px;\n  }\n`;\n","import { PaginationContainer, PaginationList } from \"../styles/pagination\";\n\ninterface PaginationProps {\n  numberOfPages: number;\n  currentPage: number;\n  updateCurrentPage: (number: number) => void;\n}\n\nconst Pagination = ({\n  numberOfPages,\n  currentPage,\n  updateCurrentPage,\n}: PaginationProps) => {\n  const pageNumbers = [...Array(numberOfPages + 1).keys()].slice(1);\n\n  return (\n    <PaginationContainer>\n      {pageNumbers.map((number) => (\n        <PaginationList\n          key={number}\n          onClick={() => updateCurrentPage(number)}\n          primary={`${currentPage === number ? \"active\" : \"\"}`}\n        >\n          {number}\n        </PaginationList>\n      ))}\n    </PaginationContainer>\n  );\n};\n\nexport default Pagination;\n","import { create } from \"zustand\";\n\ninterface PaginationStore {\n  recordsPerPage: number;\n  currentPage: number;\n  updateCurrentPage: (newPage: number) => void;\n}\n\nexport const usePaginationStore = create<PaginationStore>((set) => ({\n  recordsPerPage: 6,\n  currentPage: 1,\n  updateCurrentPage: (newPage: number) => {\n    set({ currentPage: newPage });\n  },\n}));\n","import styled from \"styled-components\";\n\nexport const FavouritesContainer = styled.main`\n  margin: 20px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  padding: 20px;\n`;\n\nexport const ImageWrapper = styled.div`\n  padding: 20px;\n  gap: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nexport const NoImageText = styled.p`\n  font-size: 22px;\n  padding: 10px;\n`;\n","import { useLikeButtonStore } from \"../store/likeButtonStore\";\nimport { useDataStore } from \"../store/artistDataStore\";\nimport BackButton from \"../components/BackButton\";\nimport Pagination from \"../components/Pagination\";\nimport { usePaginationStore } from \"../store/paginationStore\";\nimport ImageCard from \"../components/ImageCard\";\nimport {\n  FavouritesContainer,\n  ImageWrapper,\n  NoImageText,\n  Title,\n} from \"../styles/favourites\";\n\nconst Favourites = () => {\n  const artistsData = useDataStore((store) => store.artistsData);\n  const likedCardIds = useLikeButtonStore((state) => state.likedCardIds);\n  const [currentPage, updateCurrentPage, recordsPerPage] = usePaginationStore(\n    (state) => [\n      state.currentPage,\n      state.updateCurrentPage,\n      state.recordsPerPage,\n    ]\n  );\n\n  let likedImages: any[] = [];\n  artistsData.map((data) => {\n    const images = data.works.filter((image) =>\n      likedCardIds.includes(image.id)\n    );\n    if (images.length > 0) likedImages.push(...images);\n  });\n\n  const indexOfLastRecord = currentPage * recordsPerPage;\n  const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n  const currentRecords = likedImages.slice(\n    indexOfFirstRecord,\n    indexOfLastRecord\n  );\n  const numberOfPages = Math.ceil(likedImages.length / recordsPerPage);\n\n  return (\n    <FavouritesContainer>\n      <BackButton />\n      <Title>Favourites Paintings</Title>\n      <ImageWrapper>\n        {likedImages.length > 0 ? (\n          currentRecords.map((image) => (\n            <ImageCard key={image.id} image={image} />\n          ))\n        ) : (\n          <NoImageText>\n            There is no favourite images. Please select some!\n          </NoImageText>\n        )}\n      </ImageWrapper>\n      {numberOfPages > 1 ? (\n        <Pagination\n          numberOfPages={numberOfPages}\n          currentPage={currentPage}\n          updateCurrentPage={updateCurrentPage}\n        />\n      ) : (\n        \"\"\n      )}\n    </FavouritesContainer>\n  );\n};\n\nexport default Favourites;\n","import { create } from \"zustand\";\n\ninterface LikeButtonStore {\n  likedCardIds: number[];\n  toggleLike: (id: number) => void;\n}\n\nexport const useLikeButtonStore = create<LikeButtonStore>((set) => ({\n  likedCardIds: [],\n  toggleLike: (id: number) =>\n    set((state) => {\n      const likedCardIds = [...state.likedCardIds];\n      const index = likedCardIds.indexOf(id);\n      if (index !== -1) {\n        likedCardIds.splice(index, 1);\n      } else {\n        likedCardIds.push(id);\n      }\n      return { likedCardIds };\n    }),\n}));\n"],"names":["BackButtonComponent","styled","_templateObject","_taggedTemplateLiteral","navigate","useNavigate","_jsx","onClick","children","ImageCardContainer","CardImage","_templateObject2","CardText","_templateObject3","LikeButton","_templateObject4","props","isSelected","_ref","image","_useLikeButtonStore","useLikeButtonStore","state","likedCardIds","toggleLike","_useLikeButtonStore2","_slicedToArray","includes","id","_jsxs","src","workLink","alt","workImage","loading","PaginationContainer","PaginationList","primary","numberOfPages","currentPage","updateCurrentPage","pageNumbers","_toConsumableArray","Array","keys","slice","map","number","concat","usePaginationStore","create","set","recordsPerPage","newPage","FavouritesContainer","Title","ImageWrapper","NoImageText","artistsData","useDataStore","store","_usePaginationStore","_usePaginationStore2","likedImages","data","images","works","filter","length","push","apply","indexOfLastRecord","indexOfFirstRecord","currentRecords","Math","ceil","BackButton","ImageCard","Pagination","index","indexOf","splice"],"sourceRoot":""}