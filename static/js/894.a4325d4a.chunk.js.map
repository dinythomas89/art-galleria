{"version":3,"file":"static/js/894.a4325d4a.chunk.js","mappings":"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","sources":["styles/backButton.ts","components/BackButton.tsx","styles/imageCard.ts","components/ImageCard.tsx","styles/notFound.ts","components/NotFound.tsx","styles/imageSlider.ts","components/ImageSlider.tsx","styles/artist.ts","pages/Artist.tsx","store/likeButtonStore.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const BackButtonComponent = styled.div`\n  margin: 20px;\n  max-width: max-content;\n  font-size: 26px;\n  color: #6b6b6c;\n  cursor: pointer;\n\n  &:hover {\n    color: black;\n  }\n`;\n","import { useNavigate } from \"react-router-dom\";\nimport { BackButtonComponent } from \"../styles/backButton\";\n\nconst BackButton = () => {\n  let navigate = useNavigate();\n  return (\n    <BackButtonComponent onClick={() => navigate(-1)}>â¬…</BackButtonComponent>\n  );\n};\n\nexport default BackButton;\n","import styled from \"styled-components\";\n\nexport const ImageCardContainer = styled.div`\n  height: max-content;\n  padding: 10px;\n  margin: 10px;\n  border-radius: 10px;\n  -webkit-box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px,\n    rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px,\n    rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const CardImage = styled.img`\n  min-width: 250px;\n  max-width: 330px;\n  height: 300px;\n  border-radius: 10px;\n  animation: blur 4s 1;\n\n  @keyframes blur {\n    from {\n      filter: blur(3px);\n      opacity: 0;\n    }\n    to {\n      filter: blur(0px);\n      opacity: 1;\n    }\n  }\n`;\n\nexport const CardText = styled.p`\n  font-size: 1.2em;\n`;\n\nexport const LikeButton = styled.button<{ isSelected: boolean }>`\n  font-size: 28px;\n  padding: 10px 0;\n  background: white;\n  border: none;\n  cursor: pointer;\n  color: ${(props) => (props.isSelected ? \"#213e5c\" : \"#aaaaad\")};\n\n  &:hover {\n    font-size: 41px;\n    padding: 0;\n    animation: wiggle 2s linear infinite;\n\n    @keyframes wiggle {\n      0%,\n      7% {\n        transform: rotateZ(0);\n      }\n      15% {\n        transform: rotateZ(-15deg);\n      }\n      20% {\n        transform: rotateZ(10deg);\n      }\n      25% {\n        transform: rotateZ(-10deg);\n      }\n      30% {\n        transform: rotateZ(6deg);\n      }\n      35% {\n        transform: rotateZ(-4deg);\n      }\n      40%,\n      100% {\n        transform: rotateZ(0);\n      }\n    }\n  }\n`;\n","import { useLikeButtonStore } from \"../store/likeButtonStore\";\nimport {\n  CardImage,\n  CardText,\n  ImageCardContainer,\n  LikeButton,\n} from \"../styles/imageCard\";\n\ninterface Image {\n  id: number;\n  workImage: string;\n  workLink: string;\n}\ninterface ImageProps {\n  image: Image;\n}\n\nconst ImageCard = ({ image }: ImageProps) => {\n  const [likedCardIds, toggleLike] = useLikeButtonStore((state) => [\n    state.likedCardIds,\n    state.toggleLike,\n  ]);\n  const isSelected = likedCardIds.includes(image.id);\n\n  return (\n    <ImageCardContainer>\n      <CardImage src={image.workLink} alt={image.workImage} loading=\"lazy\" />\n      <CardText>{image.workImage}</CardText>\n      <LikeButton\n        onClick={() => {\n          toggleLike(image.id);\n        }}\n        isSelected={isSelected}\n      >\n        &#9829;\n      </LikeButton>\n    </ImageCardContainer>\n  );\n};\n\nexport default ImageCard;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const NotFoundContainer = styled.h2`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n`;\n\nexport const NotFoundSymbol = styled.h1`\n  font-size: 4em;\n`;\n\nexport const NotFoundText = styled.div`\n  font-size: 1.1em;\n  width: 75%;\n  padding: 30px;\n`;\n\nexport const LinkText = styled.p`\n  padding: 5px 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #b49542;\n  font-size: 1.1em;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &:active {\n    color: blue;\n  }\n`;\n","import {\n  NotFoundContainer,\n  NotFoundSymbol,\n  NotFoundText,\n  LinkText,\n  StyledLink,\n} from \"../styles/notFound\";\n\nconst NotFound = () => {\n  return (\n    <NotFoundContainer>\n      <NotFoundSymbol>404</NotFoundSymbol>\n\n      <NotFoundText>\n        Maybe this page moved? Got deleted? Is hiding out in quarantine? Never\n        existed in the first place?\n        <LinkText>\n          Let's go <StyledLink to=\"/\">home</StyledLink> and try from there.\n        </LinkText>\n      </NotFoundText>\n    </NotFoundContainer>\n  );\n};\n\nexport default NotFound;\n","import styled from \"styled-components\";\n\nexport const ImageSliderComponent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SliderTitle = styled.h2`\n  text-align: center;\n  padding: 20px;\n  font-size: 1.8em;\n`;\n\nexport const SliderWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n`;\n\nexport const SliderContentWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  padding: 0 20px;\n`;\n\nexport const SliderContent = styled.div`\n  display: flex;\n  transition: all 250ms linear;\n`;\n\nexport const PrevButton = styled.button`\n  position: absolute;\n  z-index: 1;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 0px;\n  font-size: 34px;\n  color: black;\n  background: white;\n  border: none;\n  cursor: pointer;\n  padding: 10px;\n\n  &:hover {\n    font-size: 38px;\n    font-weight: 900;\n  }\n`;\n\nexport const NextButton = styled.button`\n  position: absolute;\n  z-index: 1;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 0px;\n  font-size: 34px;\n  color: black;\n  background: white;\n  border: none;\n  cursor: pointer;\n  padding: 10px;\n\n  &:hover {\n    font-size: 38px;\n    font-weight: 900;\n  }\n`;\n","import { useState } from \"react\";\nimport {\n  ImageSliderComponent,\n  SliderWrapper,\n  SliderContentWrapper,\n  SliderContent,\n  PrevButton,\n  NextButton,\n  SliderTitle,\n} from \"../styles/imageSlider\";\nimport ImageCard from \"./ImageCard\";\n\ninterface Slide {\n  id: number;\n  workImage: string;\n  workLink: string;\n}\ninterface SliderProps {\n  slides: Slide[];\n}\nconst ImageSlider = ({ slides }: SliderProps) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const show = 3;\n\n  const next = () => {\n    if (currentIndex < slides.length - show) {\n      setCurrentIndex((prevState) => prevState + 1);\n    }\n  };\n\n  const prev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex((prevState) => prevState - 1);\n    }\n  };\n\n  return (\n    <ImageSliderComponent>\n      <SliderTitle>Famous Works</SliderTitle>\n      <SliderWrapper>\n        {currentIndex > 0 && <PrevButton onClick={prev}>&#10094;</PrevButton>}\n        <SliderContentWrapper>\n          <SliderContent\n            style={{\n              transform: `translateX(-${currentIndex * (100 / show)}%)`,\n            }}\n          >\n            {slides.map((slide) => (\n              <ImageCard key={slide.id} image={slide} />\n            ))}\n          </SliderContent>\n        </SliderContentWrapper>\n        {currentIndex < slides.length - show && (\n          <NextButton onClick={next}>&#10095;</NextButton>\n        )}\n      </SliderWrapper>\n    </ImageSliderComponent>\n  );\n};\n\nexport default ImageSlider;\n","import styled from \"styled-components\";\n\nexport const ArtistContainer = styled.main`\n  margin: 20px;\n`;\n\nexport const ArtistTitle = styled.h1`\n  text-align: center;\n`;\n\nexport const ArtistDetails = styled.div`\n  padding: 30px 0;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nexport const ArtistImage = styled.img`\n  width: 350px;\n  height: 350px;\n  border-radius: 50%;\n`;\n\nexport const ArtistDescription = styled.p`\n  width: 50vw;\n  font-weight: 500;\n  font-size: 1.1em;\n  font-family: Cambria;\n  line-height: 1.5em;\n  word-spacing: 2px;\n  letter-spacing: 1.2px;\n`;\n\nexport const SourceLink = styled.a`\n  color: #6b6b6c;\n  margin-bottom: 30px;\n  padding: 10px;\n\n  &:hover {\n    color: black;\n    cursor: pointer;\n  }\n\n  &:active {\n    color: blue;\n    cursor: pointer;\n  }\n`;\n\nexport const SourceLinkWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-right: 100px;\n`;\n","import { useParams } from \"react-router-dom\";\nimport BackButton from \"../components/BackButton\";\nimport ImageSlider from \"../components/ImageSlider\";\nimport { useDataStore } from \"../store/artistDataStore\";\nimport {\n  ArtistContainer,\n  ArtistDescription,\n  ArtistDetails,\n  ArtistImage,\n  ArtistTitle,\n  SourceLink,\n  SourceLinkWrapper,\n} from \"../styles/artist\";\nimport NotFound from \"../components/NotFound\";\n\nconst Artist = () => {\n  let { name } = useParams();\n  const artistsData = useDataStore((store) => store.artistsData);\n\n  const filterArtistPaintings = artistsData.filter(\n    (artist) => artist.name === name\n  );\n\n  return (\n    <ArtistContainer>\n      <BackButton />\n      {filterArtistPaintings.length > 0 ? (\n        <>\n          <ArtistTitle>{filterArtistPaintings[0].name}</ArtistTitle>\n          <ArtistDetails>\n            <ArtistImage\n              src={filterArtistPaintings[0].image}\n              alt={filterArtistPaintings[0].name}\n            />\n            <ArtistDescription>\n              {filterArtistPaintings[0].description}\n            </ArtistDescription>\n          </ArtistDetails>\n          <SourceLinkWrapper>\n            <SourceLink\n              href={filterArtistPaintings[0].source}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              GO TO SOURCE\n            </SourceLink>\n          </SourceLinkWrapper>\n          <ImageSlider slides={filterArtistPaintings[0].works} />\n        </>\n      ) : (\n        <NotFound />\n      )}\n    </ArtistContainer>\n  );\n};\n\nexport default Artist;\n","import { create } from \"zustand\";\n\ninterface LikeButtonStore {\n  likedCardIds: number[];\n  toggleLike: (id: number) => void;\n}\n\nexport const useLikeButtonStore = create<LikeButtonStore>((set) => ({\n  likedCardIds: [],\n  toggleLike: (id: number) =>\n    set((state) => {\n      const likedCardIds = [...state.likedCardIds];\n      const index = likedCardIds.indexOf(id);\n      if (index !== -1) {\n        likedCardIds.splice(index, 1);\n      } else {\n        likedCardIds.push(id);\n      }\n      return { likedCardIds };\n    }),\n}));\n"],"names":["BackButtonComponent","styled","_templateObject","_taggedTemplateLiteral","navigate","useNavigate","_jsx","onClick","children","ImageCardContainer","CardImage","_templateObject2","CardText","_templateObject3","LikeButton","_templateObject4","props","isSelected","_ref","image","_useLikeButtonStore","useLikeButtonStore","state","likedCardIds","toggleLike","_useLikeButtonStore2","_slicedToArray","includes","id","_jsxs","src","workLink","alt","workImage","loading","NotFoundContainer","NotFoundSymbol","NotFoundText","LinkText","StyledLink","Link","_templateObject5","to","ImageSliderComponent","SliderTitle","SliderWrapper","SliderContentWrapper","SliderContent","PrevButton","_templateObject6","NextButton","_templateObject7","slides","_useState","useState","_useState2","currentIndex","setCurrentIndex","prevState","style","transform","concat","map","slide","ImageCard","length","ArtistContainer","ArtistTitle","ArtistDetails","ArtistImage","ArtistDescription","SourceLink","SourceLinkWrapper","name","useParams","filterArtistPaintings","useDataStore","store","artistsData","filter","artist","BackButton","_Fragment","description","href","source","target","rel","ImageSlider","works","NotFound","create","set","_toConsumableArray","index","indexOf","splice","push"],"sourceRoot":""}